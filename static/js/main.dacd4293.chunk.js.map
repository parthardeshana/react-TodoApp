{"version":3,"sources":["TodoList.jsx","userId.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TodoList","props","className","style","color","todoItem","completed","title","onClick","onSelect","id","icon","faTimesCircle","notDone","faStopwatch","onDone","faLocationArrow","UserId","onUserChange","userId","App","useState","Items","setItems","inputList","setInputList","filter","setFilter","loading","setLoading","userIdList","setUserIdList","selectedUserId","setSelectedUserId","useEffect","fetch","then","resp","json","allUserIds","map","todo","Set","setAllUserId","deleteItem","filteredItems","slice","concat","length","userSpecificDataShow","doneItem","tempArr","notItem","todoList","todoListByUser","e","fontSize","type","placeholder","value","onChange","target","console","log","oldItems","faPlusCircle","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dacd4293.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaTimesCircle,\r\n\tfaLocationArrow,\r\n\tfaStopwatch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TodoList = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t<li style={{ color: props.todoItem.completed ? \"green\" : \"black\" }}>\r\n\t\t\t\t\t{props.todoItem.title}\r\n\t\t\t\t</li>\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\tclassName=\"closeBtn icons\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.onSelect(props.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon={faTimesCircle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\tclassName=\"active icons\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.notDone(props.todoItem);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon={faStopwatch}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\tclassName=\"done icons\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.onDone(props.todoItem);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ticon={faLocationArrow}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nfunction UserId(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-outline-success mt-2 ml-5\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.onUserChange(props.userId);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.userId}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default UserId;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./TodoList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport UserId from \"./userId\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n\tconst [Items, setItems] = useState([]);\n\tconst [inputList, setInputList] = useState(\"\");\n\tconst [filter, setFilter] = useState(\"all\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [userIdList, setUserIdList] = useState([]);\n\tconst [selectedUserId, setSelectedUserId] = useState(null);\n\n\tconst setAllUserId = (resp, setUserIdList) => {\n\t\tconst allUserIds = resp.map((todo) => todo.userId);\n\t\tconst uniqUserId = [...new Set(allUserIds)];\n\t\tsetUserIdList(uniqUserId);\n\t};\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tconst url = \"https://jsonplaceholder.typicode.com/todos\";\n\t\tfetch(url)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((resp) => {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetItems(resp);\n\t\t\t\tsetAllUserId(resp, setUserIdList);\n\t\t\t});\n\t}, []);\n\n\tfunction itemEvent(e) {\n\t\tsetInputList(e.target.value);\n\t}\n\n\tfunction addTodoItems() {\n\t\tconsole.log(\"aaaa\", inputList);\n\t\tif (inputList !== \"\" && inputList !== \" \") {\n\t\t\tsetItems((oldItems) => {\n\t\t\t\treturn [...oldItems, { title: inputList, completed: false }];\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"Empty!! please add items \");\n\t\t\tsetItems((oldItems) => {\n\t\t\t\treturn [...oldItems];\n\t\t\t});\n\t\t}\n\t\tsetInputList(\"\");\n\t}\n\tconst deleteItem = (id) => {\n\t\t// delete items\n\t\tconst filteredItems = Items.slice(0, id).concat(\n\t\t\tItems.slice(id + 1, Items.length)\n\t\t);\n\t\tsetItems(filteredItems);\n\t};\n\tlet userSpecificDataShow = (id) => {\n\t\t// console.log(id);\n\t\t// let variable = id;\n\t\t// let newUserList = Items.filter((e) => e.userId === variable);\n\t\t// console.log(\"i am the specif\", newUserList);\n\t\tsetSelectedUserId(id);\n\t\t// now i wannt to do reset that aray after rendering\n\t};\n\tfunction doneItem(todoItem) {\n\t\ttodoItem.completed = true;\n\t\tlet tempArr = [...Items];\n\t\tsetItems(tempArr);\n\t}\n\tfunction notItem(todoItem) {\n\t\ttodoItem.completed = false;\n\t\tlet tempArr = [...Items];\n\t\tsetItems(tempArr);\n\t}\n\tconst completedTask = () => {\n\t\tsetFilter(\"completed\");\n\t};\n\tconst remainingTask = () => {\n\t\tsetFilter(\"active\");\n\t};\n\tconst allTask = () => {\n\t\tsetFilter(\"all\");\n\t};\n\tlet todoList = [];\n\n\tif (filter === \"active\") {\n\t\ttodoList = Items.filter((todoItem) => !todoItem.completed);\n\t} else if (filter === \"completed\") {\n\t\ttodoList = Items.filter((todoItem) => todoItem.completed);\n\t} else {\n\t\ttodoList = Items;\n\t}\n\n\tlet todoListByUser = todoList;\n\tif(selectedUserId) {\n\t\ttodoListByUser = todoList.filter((e) => e.userId === selectedUserId);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main_div\">\n\t\t\t\t<div className=\"center_div\">\n\t\t\t\t\t<h2>TODO List</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle={{ fontSize: \"20px\" }}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Add a Item\"\n\t\t\t\t\t\t\tvalue={inputList}\n\t\t\t\t\t\t\tonChange={itemEvent}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\tclassName=\"addBtn\"\n\t\t\t\t\t\t\tonClick={addTodoItems}\n\t\t\t\t\t\t\ticon={faPlusCircle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"d-flex justify-content-between mt-5\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{userIdList.map((userId) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<UserId\n\t\t\t\t\t\t\t\t\t\tuserId={userId}\n\t\t\t\t\t\t\t\t\t\tkey={userId}\n\t\t\t\t\t\t\t\t\t\tonUserChange={userSpecificDataShow}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{loading && <div>LOADING....</div>}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ul className=\"mr-5\">\n\t\t\t\t\t\t\t\t{todoListByUser.map((todoItem, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t\t\t\ttodoItem={todoItem}\n\t\t\t\t\t\t\t\t\t\t\tonSelect={deleteItem}\n\t\t\t\t\t\t\t\t\t\t\tonDone={doneItem}\n\t\t\t\t\t\t\t\t\t\t\tnotDone={notItem}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t{!loading && (\n\t\t\t\t\t\t\t\t<div className=\"listBtn\">\n\t\t\t\t\t\t\t\t\t<button className=\"myBtn\" onClick={completedTask}>\n\t\t\t\t\t\t\t\t\t\tCompleted Task\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button className=\"myBtn\" onClick={remainingTask}>\n\t\t\t\t\t\t\t\t\t\tActive Task\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button className=\"myBtn\" onClick={allTask}>\n\t\t\t\t\t\t\t\t\t\tAll Task\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}